name: Test & Deploy Backend

on:
  push:
    branches:
      - main  # oder dein Hauptbranch, falls er anders heißt      

jobs:
  test:
    runs-on: ubuntu-latest

    steps:
      - name: Code aus dem Repository holen
        uses: actions/checkout@v4

      - name: Umgebungsvariablen setzen
        run: |
          echo "SECRET_KEY=${{ secrets.SECRET_KEY }}" >> $GITHUB_ENV
          echo "DB_NAME=${{ secrets.DB_NAME }}" >> $GITHUB_ENV
          echo "DB_USER=${{ secrets.DB_USER }}" >> $GITHUB_ENV
          echo "DB_PASSWORD=${{ secrets.DB_PASSWORD }}" >> $GITHUB_ENV
          echo "FRONTEND_URL=${{ secrets.FRONTEND_URL }}" >> $GITHUB_ENV
          echo "DEBUG=${{ secrets.DEBUG }}" >> $GITHUB_ENV   # DEBUG hinzufügen

      - name: Python-Umgebung einrichten
        uses: actions/setup-python@v4
        with:
          python-version: "3.10"

      - name: Abhängigkeiten installieren
        run: |
          python -m venv env
          source env/bin/activate
          pip install --upgrade pip
          pip install -r requirements.txt

      - name: Pytest ausführen
        run: |
          source env/bin/activate
          # Umgebungsvariablen explizit setzen
          export SECRET_KEY="${{ secrets.SECRET_KEY }}"
          export DATABASE_NAME="${{ secrets.DATABASE_NAME }}"
          export DATABASE_USER="${{ secrets.DATABASE_USER }}"
          export DATABASE_PASSWORD="${{ secrets.DATABASE_PASSWORD }}"
          export FRONTEND_URL="${{ secrets.FRONTEND_URL }}"
          export DEBUG="${{ secrets.DEBUG }}"  # DEBUG hinzufügen
          pytest --disable-warnings --maxfail=1

  deploy:
    needs: test  # Deployment nur ausführen, wenn Tests erfolgreich sind
    runs-on: ubuntu-latest

    steps:
      - name: Code aus dem Repository holen
        uses: actions/checkout@v4

      - name: SSH Verbindung aufbauen und Deploy-Skript ausführen
        uses: appleboy/ssh-action@v1.0.3
        with:
          host: ${{ secrets.SSH_HOST }}
          username: ${{ secrets.SSH_USER }}
          key: ${{ secrets.SERVER_SSH_KEY }}
          script: |        
            export SECRET_KEY="${{ secrets.SECRET_KEY }}"
            export DB_NAME="${{ secrets.DB_NAME }}"
            export DB_USER="${{ secrets.DB_USER }}"
            export DB_PASSWORD="${{ secrets.DB_PASSWORD }}"
            export FRONTEND_URL="${{ secrets.FRONTEND_URL }}"
            export DEBUG="${{ secrets.DEBUG }}"  # DEBUG hinzufügen
            cd /home/oezkan/projects/videoflix_backend
            git pull origin main
            source env/bin/activate
            pip install -r requirements.txt
            python manage.py migrate
            python manage.py collectstatic --noinput
            systemctl restart gunicorn
            systemctl restart nginx
